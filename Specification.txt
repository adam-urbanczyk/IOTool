Commands:
wh p        wait high: char[2] pin_name (1)
wl p        wait low: char[2] pin_name
wc p        wait change: char[2] pin_name
wt d        set wait time: uint16 us
rh p        raw wait high: char[2] pin_name
rl p        raw wait low: char[2] pin_name
rc p        raw wait change: char[2] pin_name
dm d        delay ms: uint16 ms
du d        delay µs: uint16 us
pm p v      set PWM: char[2] pin_name  uint16 value
sh p        set high: char[2] pin_name
sl p        set low: char[2] pin_name
st p        set high-impedance "tri-state": char[2] pin_name
ct b        character transmit: uint8 byte
cr          character receive
lo i n      loop: uint8 goto_index uint16 num_times (2)
go i        goto: uint8 goto_index

program     start programming, clearing previous (3)
end         end programming, return to immediate-execution mode
run n       run program: uint16 num_loops (4, 5)
\x80\xFF    turn serial echo off for non-interactive use
!           break out of execution (6)

(1) pin names are 'B0'...'F7'.
(2) nested loops WILL NOT WORK!
(3) commands not issued between 'program' and 'end' are immediately executed.
(4) if n is not specified run one loop.
(5) When program has finished, "DONE\r\n" is output.
(6) The 'du' command will not respond to a break, but all others will.

PWM-capable pins:
8-bit @ 62.5 kHz: B7 and D0
10-bit @ 15.625 kHz: B5 and B6
8-bit @ 31.25 kHz: C7 and D7




PWM:
8-bit @ 62.5 kHz: OC0A (B7) and OC0B (D0)
10-bit @ 15.625 kHz: OC1A (B5) and OC1B (B6)
8-bit @ 31.25 kHz: OC4A (C7) and OC4D (D7)

Timer/Counter0
prescaler: 1 (62.5 ns/count)
Mode: fast PWM
OCR0A: user-defined
OCR0B: user-defined

Timer/Counter1
prescaler: 1 (62.5 ns/count)
Mode: fast PWM, 10-bit (ICR1 = 2**10, WGM13:0 bits set to 14)
OCR1A: user-defined
OCR1B: user-defined

Timer/Counter3: prescaler = 8, 0.5 µs/count
Mode: normal
OCR3A: ms timer -- increment register by 2000 every time
OCR3B: µs timer -- set to desired delay time
OCR3C: USB task timer 60000 (30 ms) or less

Timer/Counter4:
prescaler: 2 (125 ns/count)
Mode: PWM, 8-bit (OCR4C = 2**8)
OCR4A: user-defined
OCR4D: user-defined